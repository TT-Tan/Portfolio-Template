name: React CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: self-hosted  # Sử dụng runner tự quản

    continue-on-error: true  # Bỏ qua lỗi và tiếp tục pipeline

    steps:
      # Lấy mã nguồn từ repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Cài đặt Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Thay đổi phiên bản Node.js nếu cần

      # Cài đặt dependencies
      - name: Install dependencies
        run: npm install

      # Kiểm tra lint
      - name: Lint code
        run: npm run lint -- --quiet || echo "Linting failed, but continuing the pipeline"  # Bỏ qua lỗi lint

      # Chạy test
      - name: Run tests
        run: npm test -- --watchAll=false --maxWorkers=2 || echo "Tests failed, but continuing the pipeline"  # Bỏ qua lỗi test

      # Build dự án
      - name: Build project
        run: npm run build || echo "Build failed, but continuing the pipeline"  # Bỏ qua lỗi build
        
  deploy:
    needs: build  # Job deploy sẽ chạy sau khi job build hoàn thành
    runs-on: self-hosted  # Sử dụng runner tự quản

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Triển khai lên server hoặc môi trường khác (ví dụ: Docker, FTP, SSH, v.v)
      - name: Deploy to production server
        run: |
          echo "Deploying to production..."
          # Ví dụ: Kéo mã nguồn mới nhất từ Git và triển khai Docker container (nếu dùng Docker)
          cd /home/your_project_directory || { echo "Directory not found"; exit 1; }
          git pull origin main || { echo "Git pull failed"; exit 1; }
          docker-compose -f docker-compose.yml up -d --build || { echo "Docker deploy failed"; exit 1; }
          echo "Deployment complete!"
        

